class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int l=0,r=nums.size()-1,mid;
        while(l<=r){
            mid=l+(r-l)/2;
            if(nums[mid]==target)   return mid;
            else if(nums[mid]<target)   l=mid+1;
            else r=mid-1;
        }
        return l;
    }
};
/*
Runtime: 3 ms, faster than 88.86% of C++ online submissions for Search Insert Position.
Memory Usage: 9.6 MB, less than 73.24% of C++ online submissions for Search Insert Position.
*/
