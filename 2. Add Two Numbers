/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* h1, ListNode* h2) {
        ListNode* res= new ListNode(0);
        ListNode* temp=res;
        int rem=0,sum=0;

        while(h1 || h2){
            if(h1 && h2){    sum = (h1->val)+(h2->val);             
                             h1=h1->next;
                             h2=h2->next;
                        }
            else if(h1){     sum = (h1->val);       
                             h1=h1->next;
                       }
            else{
                sum = (h2->val);
                h2=h2->next;
            }
////////////////////////////////////////////////
            if((sum+rem)>9){
                sum+=rem;
                sum %=10;
                temp->next=new ListNode(sum);
                rem=1;
            }
            else{
                temp->next=new ListNode(sum+rem);
                rem=0;
            }
            temp=temp->next;                //we have to move temp too
        }
        if(rem==1 && !h1 && !h2){   temp->next=new ListNode(rem);}
       return res->next; 
    }
};
/*Runtime: 20 ms, faster than 97.05% of C++ online submissions for Add Two Numbers.
Memory Usage: 71.5 MB, less than 49.42% of C++ online submissions for Add Two Numbers.*/
